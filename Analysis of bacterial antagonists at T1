---
title: "antagonists T1 - bacteria"
editor_options:
  chunk_output_type: console
---
```{r}
library(dplyr)
library(phyloseq)
library(ggpubr)
library(microbiome)
library(tidyr)
library(forcats)
library(RColorBrewer)
library(vegan)
library(forcats)
library(metagMisc)
```

1_ beta diversity
```{r}
load (file = 'ps-selected-only-bact-filt-lowabd-no-neg-norep2.RData')
ps.bact.dna <- subset_samples(ps.bact, nucleic.acid == "DNA" & time.point == "T1")
ps.bact.rna <- subset_samples(ps.bact, nucleic.acid == "RNA" & time.point == "T1")
```

Select antagonists
```{r}
ant.bact.dna.gen <- subset_taxa(ps.bact.dna, Genus %in% c("Pseudomonas", "Bacillus", "Pasteuria", "Lysobacter", "Rhizobium", "Variovorax", "Serratia"))
ant.bact.dna.gen@sam_data$pre.crop <- fct_relevel(ant.bact.dna.gen@sam_data$pre.crop, "bo", "ry", "ir", "er")
ant.bact.dna.gen@sam_data$cc <- fct_relevel(ant.bact.dna.gen@sam_data$cc, "FW", "OSR_T", "OSR_A", "OSR_R","PHA", "VE", "BO","BO.OSR_R", "BO.OSR_T", "PHA.OSR_T", "VE.OSR_T")

ant.bact.rna.gen <- subset_taxa(ps.bact.rna, Genus %in% c("Pseudomonas", "Bacillus", "Pasteuria", "Lysobacter", "Rhizobium", "Variovorax", "Serratia"))
ant.bact.rna.gen@sam_data$pre.crop <- fct_relevel(ant.bact.rna.gen@sam_data$pre.crop, "bo", "ry", "ir", "er")
ant.bact.rna.gen@sam_data$cc <- fct_relevel(ant.bact.rna.gen@sam_data$cc, "FW", "OSR_T", "OSR_A", "OSR_R","PHA", "VE", "BO","BO.OSR_R", "BO.OSR_T", "PHA.OSR_T", "VE.OSR_T")
```
Plot 
```{r}
#select colours and shapes
colorCode2 <- c(BO = "#490092", BO.OSR_R = "#b66dff", BO.OSR_T = "#ffb6db",  FW = "grey50", OSR_A = "#6db6ff", OSR_R = "#006ddb", OSR_T = "#b6dbff", PHA = "#009292", PHA.OSR_T = "#004949", VE = "#db6d00", VE.OSR_T = "#924900")
shapeCode1 <- c("monoculture" = 19, "mixture" = 15)

#Normalise ASVs
ant.bact.dna.gen_css = phyloseq_transform_css(ant.bact.dna.gen, norm = TRUE, log = FALSE)
#ordinate
ant.bact.dna.gen.css_bray <- ordinate(ant.bact.dna.gen_css, "PCoA", "bray")
#plot
plot_ant.bact.dna.gen.css<- plot_ordination (ant.bact.dna.gen_css, 
                                            ant.bact.dna.gen.css_bray, type = "sites",
                                 color = "cc",
                                 shape = "culture",
                                 title = expression(paste("PCoA antagonists - DNA")), label = NULL)+
                                 geom_point(aes(fill = "cc"),  size = 3) + 
  #guides(colour = guide_legend(override.aes = list(shape = 15))) + 
  scale_shape_manual (values = shapeCode1) +
  scale_color_manual(values = colorCode2) + 
  scale_fill_manual(values = colorCode2)+
  #scale_color_brewer(palette = "Paired")+
  #stat_ellipse(aes(group=pre.crop), type = "t", level = 0.95, segments = 51, na.rm = FALSE, alpha=0.5) +
  #geom_text(aes(label = pre.crop), size=3) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        #panel.background = element_blank(), axis.line = element_line(size = 1, colour = "black"),
        rect = element_rect(fill = "white",  colour = "black",size = 1, linetype = 2),
        axis.ticks = element_line(colour = "black"),
        axis.title.x = element_text(face="bold", colour="black", size=8),
        axis.title.y = element_text(face="bold", colour="black", size=8),
        axis.text.x  = element_text(face="bold", colour = "black", angle=360, vjust=0.5, size=9),
        axis.text.y  = element_text(face="bold", colour = "black", angle=360, vjust=0.5, size=9),
        panel.background = element_rect(fill = "white", colour = "black", linetype = 1, size = 1),
        panel.border = element_blank(),
        legend.position = "right")

plot(plot_ant.bact.dna.gen.css)

#RNA
#remve samples that don't have antagonists
ant.bact.rna.gen1 <- prune_samples(sample_sums(ant.bact.rna.gen) > 0, ant.bact.rna.gen)
ant.bact.rna.gen1
#normalise ASVs
ant.bact.rna.gen_css = phyloseq_transform_css(ant.bact.rna.gen1, norm = TRUE, log = FALSE)
#ordinate
ant.bact.rna.gen.css_bray <- ordinate(ant.bact.rna.gen_css, "PCoA", "bray")
#plot
plot_ant.bact.rna.gen.css<- plot_ordination (ant.bact.rna.gen_css, 
                                            ant.bact.rna.gen.css_bray, type = "sites",
                                 color = "cc",
                                 shape = "culture",
                                 title = expression(paste("PCoA antagonists - RNA")), label = NULL)+
                                 geom_point(aes( fill = "cc"),  size = 3) +
  #guides(colour = guide_legend(override.aes = list(shape = 15))) + 
  scale_shape_manual (values = shapeCode1) +
  scale_color_manual(values = colorCode2) + 
  scale_fill_manual(values = colorCode2)+
  #scale_color_brewer(palette = "Paired")+
  #stat_ellipse(aes(group=pre.crop), type = "t", level = 0.95, segments = 51, na.rm = FALSE, alpha=0.5) +
  #geom_text(aes(label = pre.crop), size=3) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        #panel.background = element_blank(), axis.line = element_line(size = 1, colour = "black"),
        rect = element_rect(fill = "white",  colour = "black",size = 1, linetype = 2),
        axis.ticks = element_line(colour = "black"),
        axis.title.x = element_text(face="bold", colour="black", size=8),
        axis.title.y = element_text(face="bold", colour="black", size=8),
        axis.text.x  = element_text(face="bold", colour = "black", angle=360, vjust=0.5, size=9),
        axis.text.y  = element_text(face="bold", colour = "black", angle=360, vjust=0.5, size=9),
        panel.background = element_rect(fill = "white", colour = "black", linetype = 1, size = 1),
        panel.border = element_blank(),
        legend.position = "right")

plot(plot_ant.bact.rna.gen.css)
```
Combine plots
```{r}
library(cowplot)
PCoA_T1_antF <- cowplot::plot_grid(
   plot_ant.bact.dna.gen.css + theme(legend.position="none", title = element_blank()), 
   plot_ant.bact.rna.gen.css+ theme(legend.position="none", title = element_blank()),
  nrow = 1, ncol = 2, scale = 1,
  hjust = 1) 
PCoA_T1_antF

legend <- get_legend(
  # create some space to the left of the legend
  plot_ant.bact.rna.gen.css + theme(legend.box.margin = margin(0,0,0,10)))

PCoA_T0_ant.l <- plot_grid(PCoA_T1_ant, legend, rel_widths = c(2, 0.5))
PCoA_T0_ant.l
```
Statistics - PERMANOVA
```{r}
#DNA
sampledf <- data.frame(sample_data(ant.bact.dna.gen_css))
ant.bact.dna.gen.css_bray <- phyloseq::distance(ant.bact.dna.gen_css, method = "bray")
dispersion<-betadisper(ant.bact.dna.gen.css_bray , group=sampledf$cc)
permutest(dispersion) #0.891
plot(dispersion, hull=FALSE, ellipse=TRUE, label = FALSE) ##sd ellipse

adonis2(ant.bact.dna.gen.css_bray ~ block2+ pre.crop*cc, data = sampledf, permutations = 999 ) #using pre-crops
adonis2(ant.bact.dna.gen.css_bray ~ block2+mc.pi.sh*cc , data = sampledf, permutations = 999 ) #using Mc levels
adonis2(ant.bact.dna.gen.css_bray ~ block2+as.numeric(log1p(McT0))*cc , data = sampledf, permutations = 999 )#using Melo counts

library(RVAideMemoire)
pairwise.perm.manova(distance(ant.bact.dna.gen_css, "bray"), 
                     fact = sampledf$cc, nperm = 999, p.method = "BH", R2 = TRUE)


#RNA
sampledf <- data.frame(sample_data(ant.bact.rna.gen_css))
ant.bact.rna.gen.css_bray <- phyloseq::distance(ant.bact.rna.gen_css,  method = "bray")
dispersion<-betadisper(ant.bact.rna.gen.css_bray , group=sampledf$cc)
permutest(dispersion) #0.089
plot(dispersion, hull=FALSE, ellipse=TRUE, label = FALSE) ##sd ellipse

adonis2(ant.bact.rna.gen.css_bray ~ block2+pre.crop*cc , data = sampledf, permutations = 999 )
adonis2(ant.bact.rna.gen.css_bray ~ block2+mc.pi.sh*cc , data = sampledf, permutations = 999 )
adonis2(ant.bact.rna.gen.css_bray ~ block2+as.numeric(log1p(McT0))*cc , data = sampledf, permutations = 999 )

pairwise.perm.manova(distance(ant.bact.rna.gen_css, "bray"), 
                     fact = sampledf$cc, nperm = 999, p.method = "BH", R2 = TRUE)
```

#################################################################################################################################################################################
#################################################################################################################################################################################
#################################################################################################################################################################################
#################################################################################################################################################################################
Alpha diversity

```{r}
load (file = 'ps-selected-only-bact-filt-lowabd-no-neg-norep2.RData')
ps.bact.dna <- subset_samples(ps.bact, nucleic.acid == "DNA"  & time.point == "T1")
ps.bact.rna <- subset_samples(ps.bact, nucleic.acid == "RNA"  & time.point == "T1")

ps.bact.dna_rar = rarefy_even_depth(ps.bact.dna, rngseed=1, sample.size=min(sample_sums(ps.bact.rna)), replace=F) #62637 reads - use min reads of RNA = 43052OTUs removed
ps.bact.rna_rar = rarefy_even_depth(ps.bact.rna, rngseed=1, sample.size=min(sample_sums(ps.bact.rna)), replace=F) #12256 reads - 41743OTUs removed

summary(readcount(ps.bact.dna_rar))
summary(readcount(ps.bact.rna_rar))
```


Select Antagonists
```{r}
#DNA
ant.bact.dna.gen_rar <- subset_taxa(ps.bact.dna_rar, Genus %in% c("Pseudomonas", "Bacillus", "Pasteuria", "Lysobacter", "Rhizobium", "Variovorax", "Serratia"))
ant.bact.dna.gen_rar@sam_data$pre.crop <- fct_relevel(ant.bact.dna.gen_rar@sam_data$pre.crop, "bo", "ry", "ir", "er")
ant.bact.dna.gen_rar@sam_data$cc <- fct_relevel(ant.bact.dna.gen_rar@sam_data$cc, "OSR_T", "OSR_A", "OSR_R","PHA", "VE", "BO","BO.OSR_R", "BO.OSR_T", "PHA.OSR_T", "VE.OSR_T", "FW")

#RNA
ant.bact.rna.gen_rar <- subset_taxa(ps.bact.rna_rar, Genus %in% c("Pseudomonas", "Bacillus", "Pasteuria", "Lysobacter", "Rhizobium", "Variovorax", "Serratia"))
ant.bact.rna.gen_rar@sam_data$pre.crop <- fct_relevel(ant.bact.rna.gen_rar@sam_data$pre.crop, "er", "ir", "ry", "bo")
ant.bact.rna.gen_rar@sam_data$cc <- fct_relevel(ant.bact.rna.gen_rar@sam_data$cc, "OSR_T", "OSR_A", "OSR_R","PHA", "VE", "BO","BO.OSR_R", "BO.OSR_T", "PHA.OSR_T", "VE.OSR_T", "FW")
```

Calculate alpha diversity indexes
```{r}
alpha.ant.gen.dna <- microbiome::alpha(ant.bact.dna.gen_rar, index = c("observed", "diversity_shannon", "chao1"))
alpha.ant.gen.dna.meta <- meta(ant.bact.dna.gen_rar)
alpha.ant.gen.dna.meta$Observed <- alpha.ant.gen.dna$observed
alpha.ant.gen.dna.meta$Shannon <- alpha.ant.gen.dna$diversity_shannon
alpha.ant.gen.dna.meta$Chao1 <- alpha.ant.gen.dna$chao1

alpha.ant.gen.rna <- microbiome::alpha(ant.bact.rna.gen_rar, index = c("observed", "diversity_shannon", "chao1"))
alpha.ant.gen.rna.meta <- meta(ant.bact.rna.gen_rar)
alpha.ant.gen.rna.meta$Observed <- alpha.ant.gen.rna$observed
alpha.ant.gen.rna.meta$Shannon <- alpha.ant.gen.rna$diversity_shannon
alpha.ant.gen.rna.meta$Chao1 <- alpha.ant.gen.rna$chao1
```
Plot Shannon
```{r}
#select colours
colorCode2 <- c(BO = "#490092", BO.OSR_R = "#b66dff", BO.OSR_T = "#ffb6db",  FW = "grey50", OSR_A = "#6db6ff", OSR_R = "#006ddb", OSR_T = "#b6dbff", PHA = "#009292", PHA.OSR_T = "#004949", VE = "#db6d00", VE.OSR_T = "#924900")
#reorder
alpha.ant.gen.dna.meta$pre.crop <- fct_relevel(alpha.ant.gen.dna.meta$pre.crop, "bo", "ry", "ir", "er")

ant_shannon.dna <-  alpha.ant.gen.dna.meta %>% 
  ggplot (aes (x= cc, y=Shannon, fill = cc )) +
  geom_boxplot( alpha = 1, color = "black", fatten = 1) +
  #scale_color_manual(values = colorCode) + 
  scale_fill_manual(values = colorCode2) +
  scale_y_continuous(limits = c(0,3.5)) + 
  theme_bw() + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        #panel.background = element_blank(), axis.line = element_line(size = 1, colour = "black"),
        rect = element_rect(fill = "white",  colour = "black",size = 1),
        axis.ticks = element_line(colour = "black"),
        axis.title.x = element_text(face="bold", colour="black", size=15),
        axis.title.y = element_text(colour="black", size=15),
        axis.text.x  = element_text(colour = "black", angle=90, vjust=0.5, size=10, hjust = 1),
        axis.text.y  = element_text(colour = "black", angle=360, vjust=0.5, size=10),
        axis.title.x.bottom = element_blank(),
        panel.background = element_rect(fill = "white", colour = "black", linetype = 1, size = 1),
        panel.border = element_blank(),
        legend.position = "none")+
  facet_wrap(vars(pre.crop), nrow = 1, ncol = 4)

plot(ant_shannon.dna)

#RNA
alpha.ant.gen.rna.meta$pre.crop <- fct_relevel(alpha.ant.gen.rna.meta$pre.crop, "bo", "ry", "ir", "er")

ant_shannon.rna <-  alpha.ant.gen.rna.meta %>% 
  ggplot (aes (x= cc, y=Shannon, fill = cc )) +
  geom_boxplot( alpha = 1, color = "black", fatten = 1) +
  #scale_color_manual(values = colorCode) + 
  scale_fill_manual(values = colorCode2) +
  scale_y_continuous(limits = c(0,3.5)) + 
  theme_bw() + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        #panel.background = element_blank(), axis.line = element_line(size = 1, colour = "black"),
        rect = element_rect(fill = "white",  colour = "black",size = 1),
        axis.ticks = element_line(colour = "black"),
        axis.title.x = element_text(face="bold", colour="black", size=15),
        axis.title.y = element_text(colour="black", size=15),
        axis.text.x  = element_text(colour = "black", angle=90, vjust=0.5, size=10, hjust = 1),
        axis.text.y  = element_text(colour = "black", angle=360, vjust=0.5, size=10),
        axis.title.x.bottom = element_blank(),
        panel.background = element_rect(fill = "white", colour = "black", linetype = 1, size = 1),
        panel.border = element_blank(),
        legend.position = "none")+
  facet_wrap(vars(pre.crop), nrow = 1, ncol = 4)

plot(ant_shannon.rna)
```

Combine plots
```{r}
library(cowplot)
alpha.ant.shannon.p <- cowplot::plot_grid(
   ant_shannon.dna + theme(legend.position="none", axis.text.x = element_blank()), 
  ant_shannon.rna+ theme(legend.position="none"), 
  nrow = 2, ncol = 1, scale = 1,
  hjust = 1) 
alpha.ant.shannon.p

#ggsave(file="./Antagonists/figures/antagonists-boxplot-t0-shannon.svg", plot=alpha.ant.shannon.p, 
#       width=80, height=150, units = "mm", device = "svg", scale = 0.8)
```

Plot Observed

```{r}
alpha.ant.gen.dna.meta$pre.crop <- fct_relevel(alpha.ant.gen.dna.meta$pre.crop, "bo", "ry", "ir", "er")

ant_Observed.dna <-  alpha.ant.gen.dna.meta %>% 
  ggplot (aes (x= cc, y=Observed, fill = cc )) +
  geom_boxplot( alpha = 1, color = "black", fatten = 1) +
  #scale_color_manual(values = colorCode) + 
  scale_fill_manual(values = colorCode2) +
  scale_y_continuous(limits = c(0,40)) + 
  theme_bw() + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        #panel.background = element_blank(), axis.line = element_line(size = 1, colour = "black"),
        rect = element_rect(fill = "white",  colour = "black",size = 1),
        axis.ticks = element_line(colour = "black"),
        axis.title.x = element_text(face="bold", colour="black", size=15),
        axis.title.y = element_text(colour="black", size=15),
        axis.text.x  = element_text(colour = "black", angle=90, vjust=0.5, size=10, hjust = 1),
        axis.text.y  = element_text(colour = "black", angle=360, vjust=0.5, size=10),
        axis.title.x.bottom = element_blank(),
        panel.background = element_rect(fill = "white", colour = "black", linetype = 1, size = 1),
        panel.border = element_blank(),
        legend.position = "none")+
  facet_wrap(vars(pre.crop), nrow = 1, ncol = 4)

plot(ant_Observed.dna)

#RNA
alpha.ant.gen.rna.meta$pre.crop <- fct_relevel(alpha.ant.gen.rna.meta$pre.crop, "bo", "ry", "ir", "er")

ant_Observed.rna <-  alpha.ant.gen.rna.meta %>% 
  ggplot (aes (x= cc, y=Observed, fill = cc )) +
  geom_boxplot( alpha = 1, color = "black", fatten = 1) +
  #scale_color_manual(values = colorCode) + 
  scale_fill_manual(values = colorCode2) +
  scale_y_continuous(limits = c(0,40)) + 
  theme_bw() + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        #panel.background = element_blank(), axis.line = element_line(size = 1, colour = "black"),
        rect = element_rect(fill = "white",  colour = "black",size = 1),
        axis.ticks = element_line(colour = "black"),
        axis.title.x = element_text(face="bold", colour="black", size=15),
        axis.title.y = element_text(colour="black", size=15),
        axis.text.x  = element_text(colour = "black", angle=90, vjust=0.5, size=10, hjust = 1),
        axis.text.y  = element_text(colour = "black", angle=360, vjust=0.5, size=10),
        axis.title.x.bottom = element_blank(),
        panel.background = element_rect(fill = "white", colour = "black", linetype = 1, size = 1),
        panel.border = element_blank(),
        legend.position = "right")+
  facet_wrap(vars(pre.crop), nrow = 1, ncol = 4)

plot(ant_Observed.rna)
```

```{r}
library(cowplot)
alpha.ant.Observed.p <- cowplot::plot_grid(
   ant_Observed.dna + theme(legend.position="none", axis.text.x = element_blank()), 
  ant_Observed.rna+ theme(legend.position="none"), 
  nrow = 2, ncol = 1, scale = 1,
  hjust = 1) 
alpha.ant.Observed.p

#ggsave(file="./Antagonists/figures/antagonists-boxplot-t0-Observed.svg", plot=alpha.ant.Observed.p, 
#       width=80, height=150, units = "mm", device = "svg", scale = 0.8)
```
Combine Shannon and Observed plots
```{r}
library(cowplot)

legend <- get_legend(
  # create some space to the left of the legend
  ant_Observed.rna + theme(legend.box.margin = margin(0,0,0,10)))

alpha.gen <- cowplot::plot_grid(
  ant_shannon.dna + theme(legend.position="none"),
  ant_shannon.rna + theme(legend.position="none"),
  ant_Observed.dna + theme(legend.position="none"),
  ant_Observed.rna + theme(legend.position="none"),
  nrow = 4, ncol = 1, scale = 1,
  hjust = 1) 
alpha.gen

alpha.gen.l <- plot_grid(alpha.gen, legend, rel_widths = c(3,0.5))
alpha.gen.l
#ggsave(file="./Antagonists/figures/antagonists-boxplot-t0-Chao1.svg", plot=alpha.ant.Chao1.p, 
#       width=80, height=150, units = "mm", device = "svg", scale = 0.8)
```

Stats
```{r}
#DNA - Shannon
shapiro.test(alpha.ant.gen.dna.meta$Shannon)#non-normal
ggqqplot(alpha.ant.gen.dna.meta$Shannon)#non-normal

#try with log transform
shapiro.test(log(alpha.ant.gen.dna.meta$Shannon))#non-normal
ggqqplot(log(alpha.ant.gen.dna.meta$Shannon))#non-normal

#non-normal - use Kruskal Wallis test
library(FSA)
#test
k1<- kruskal.test(Shannon ~ cc, data=alpha.ant.gen.dna.meta)
k1

#plot and make statistics with ggstatplot
#select colours
colorCode2 <- c(BO = "#490092", BO.OSR_R = "#b66dff", BO.OSR_T = "#ffb6db",  FW = "grey50", OSR_A = "#6db6ff", OSR_R = "#006ddb", OSR_T = "#b6dbff", PHA = "#009292", PHA.OSR_T = "#004949", VE = "#db6d00", VE.OSR_T = "#924900")

library(ggstatsplot)
sh.dna.bact <- ggstatsplot:: ggbetweenstats(
  data = alpha.ant.gen.dna.meta,
  x = cc,
  y = Shannon,
  type = "nonparametric", # ANOVA or Kruskal-Wallis
  plot.type = "box",
  pairwise.comparisons = TRUE,
  pairwise.display = "significant",
  p.adjust.method = "holm",
  centrality.plotting = FALSE,
  bf.message = FALSE) +
  ggplot2::scale_color_manual(values = colorCode2) +
  ggplot2::theme (axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 8))
sh.dna.bact

#test for pre-crop
k2 <- kruskal.test(Shannon ~ pre.crop, data=alpha.ant.gen.dna.meta)
k2 #non-significant
#test for block
k3 <- kruskal.test(Shannon ~ block2, data=alpha.ant.gen.dna.meta)
k3 #non-significant


### DNA- Observed
shapiro.test(alpha.ant.gen.dna.meta$Observed) #non-normal
lm2 <- lm(Observed ~ pre.crop+cc, data = alpha.ant.gen.dna.meta)
res <- lm2$residuals #non-normal
shapiro.test(res)#p-value > 0.05 data are not significantly different from normal distribution.
ggqqplot(res)
ggdensity(res)

#can't use linear - use kruskal wallis 
#test for cover crop (cc)
k1<- kruskal.test(Observed ~ cc, data=alpha.ant.gen.dna.meta)
k1 #significant

#plot and stats with ggstatsplot
obs.dna.bact <- ggstatsplot:: ggbetweenstats(
  data = alpha.ant.gen.dna.meta,
  x = cc,
  y = Observed,
  type = "nonparametric", # ANOVA or Kruskal-Wallis
  plot.type = "box",
  pairwise.comparisons = TRUE,
  pairwise.display = "significant",
  p.adjust.method = "holm",
  centrality.plotting = FALSE,
  bf.message = FALSE) +
  ggplot2::scale_color_manual(values = colorCode2) +
  ggplot2::theme (axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 8))

#test for pre-crop
k2 <- kruskal.test(Observed ~ pre.crop, data=alpha.ant.gen.dna.meta)
k2 #non-significant
#test for block
k3 <- kruskal.test(Observed ~ block2, data=alpha.ant.gen.dna.meta)
k3 #non-significant

Combine plots Shannon and Observed DNA
dna.bact.t1 <- combine_plots( plotlist = list (sh.dna.bact, obs.dna.bact), 
               plotgrid.args=list(nrow = 1))
```

```{r}
#RNA - Shannon
shapiro.test(alpha.ant.gen.rna.meta$Shannon) #non-normal
lm4 <- lm(Shannon ~ cc, data = alpha.ant.gen.rna.meta)
res <- lm4$residuals
shapiro.test(res)#non-normal
ggqqplot(res)
ggdensity(res)

#can't use linear model, use non parametric
#test for cover crops
k1<- kruskal.test(Shannon ~ cc, data=alpha.ant.gen.rna.meta)
k1 #significant
#test for pre-crop
k2 <- kruskal.test(Shannon ~ pre.crop, data=alpha.ant.gen.rna.meta)
k2 #non-significant
#test for block
k3 <- kruskal.test(Shannon ~ block2, data=alpha.ant.gen.rna.meta)
k3 #non-significant

#plot and post-hoc with dunn's test
sh.rna.bact <- ggstatsplot:: ggbetweenstats(
  data = alpha.ant.gen.rna.meta,
  x = cc,
  y = Shannon,
  type = "nonparametric", # ANOVA or Kruskal-Wallis
  plot.type = "box",
  pairwise.comparisons = TRUE,
  pairwise.display = "significant",
  p.adjust.method = "holm",
  centrality.plotting = FALSE,
  bf.message = FALSE) +
  ggplot2::scale_color_manual(values = colorCode2) +
  ggplot2::theme (axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 8))
sh.rna.bact


shapiro.test(alpha.ant.gen.rna.meta$Observed) #non-normal
lm5 <- lm(Observed ~ pre.crop, data = alpha.ant.gen.rna.meta)
summary(lm5) #p-value: 0.4868
res <- lm5$residuals
shapiro.test(res) #non-normal
ggqqplot(res)
ggdensity(res)

Can't use parametric - use kruskal wallis

#test per cover crop
k1<- kruskal.test(Observed ~ cc, data=alpha.ant.gen.rna.meta)
k1 #significant
#test per pre-crop
k2 <- kruskal.test(Observed ~ pre.crop, data=alpha.ant.gen.rna.meta)
k2 #non-significant
#test per block
k3 <- kruskal.test(Observed ~ block2, data=alpha.ant.gen.rna.meta)
k3 #non-significant

#plot and post-hoc with Dunn's test
obs.rna.bact <- ggstatsplot:: ggbetweenstats(
  data = alpha.ant.gen.rna.meta,
  x = cc,
  y = Observed,
  type = "nonparametric", # ANOVA or Kruskal-Wallis
  plot.type = "box",
  pairwise.comparisons = TRUE,
  pairwise.display = "significant",
  p.adjust.method = "holm",
  centrality.plotting = FALSE,
  bf.message = FALSE) +
  ggplot2::scale_color_manual(values = colorCode2) +
  ggplot2::theme (axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 8))
obs.rna.bact

Combine shannon and observed RNA
rna.bact.t1 <- combine_plots( plotlist = list (sh.rna.bact, obs.rna.bact), 
               plotgrid.args=list(nrow = 1))
```

Combine DNA and RNA shannon and observed
```{r}
dna.rna.bact.t1 <- combine_plots( plotlist = list (dna.bact.t1, rna.bact.t1), 
               plotgrid.args=list(nrow = 2))
dna.rna.bact.t1
```

#################################################################################################################################################################################
#################################################################################################################################################################################
#################################################################################################################################################################################
#################################################################################################################################################################################
Relative abundance

Load and select and transform ito rel abundances
```{r}
load (file = 'ps-selected-only-bact-filt-lowabd-no-neg-norep2.RData')
ps.bact.dna <- subset_samples(ps.bact, nucleic.acid == "DNA"  & time.point == "T1")
ps.bact.rna <- subset_samples(ps.bact, nucleic.acid == "RNA"  & time.point == "T1")

ps.bact.dna_rar = rarefy_even_depth(ps.bact.dna, rngseed=1, sample.size=min(sample_sums(ps.bact.dna)), replace=F) #112718 reads - 2575OTUs removed
ps.bact.rna_rar = rarefy_even_depth(ps.bact.rna, rngseed=1, sample.size=min(sample_sums(ps.bact.rna)), replace=F) #41125 reads - 2884OTUs removed

ps.bact.dna_comp <- transform(ps.bact.dna_rar, "compositional")
ps.bact.rna_comp <- transform(ps.bact.rna_rar, "compositional")
```

Select antagonists
```{r}
#DNA
ant.bact.dna.gen_comp <- subset_taxa(ps.bact.dna_comp, Genus %in% c("Pseudomonas", "Bacillus", "Pasteuria", "Lysobacter", "Rhizobium", "Variovorax", "Serratia"))
ant.bact.dna.gen_comp@sam_data$pre.crop <- fct_relevel(ant.bact.dna.gen_comp@sam_data$pre.crop, "bo", "ry", "ir", "er")
ant.bact.dna.gen_comp@sam_data$cc <- fct_relevel(ant.bact.dna.gen_comp@sam_data$cc, "FW", "OSR_T", "OSR_A", "OSR_R","PHA", "VE", "BO","BO.OSR_R", "BO.OSR_T", "PHA.OSR_T", "VE.OSR_T")

#RNA
ant.bact.rna.gen_comp <- subset_taxa(ps.bact.rna_comp,Genus %in% c("Pseudomonas", "Bacillus", "Pasteuria", "Lysobacter", "Rhizobium", "Variovorax", "Serratia"))
ant.bact.rna.gen_comp@sam_data$pre.crop <- fct_relevel(ant.bact.rna.gen_comp@sam_data$pre.crop, "bo", "ry", "ir", "er")
ant.bact.rna.gen_comp@sam_data$cc <- fct_relevel(ant.bact.rna.gen_comp@sam_data$cc, "FW", "OSR_T", "OSR_A", "OSR_R","PHA", "VE", "BO","BO.OSR_R", "BO.OSR_T", "PHA.OSR_T", "VE.OSR_T")
```

Make datasets for analyses
```{r}
#DNA
ant.gen.dna <- subset_taxa(ant.bact.dna.gen_comp, Family %in% c("Bacillaceae", "Rhizobiaceae", "Comamonadaceae", "Pseudomonadaceae", "Xanthomonadaceae"))

ant.gen.dna <- microbiome::aggregate_taxa(ant.gen.dna, "Genus")
samdf.gen.dna <-as.data.frame(sample_data (ant.gen.dna))
otu.gen.dna <- as.data.frame (t(otu_table(ant.gen.dna)))
tax.gen.dna <- as.data.frame(tax_table(ant.gen.dna))

data.gen.dna <- merge (samdf.gen.dna, otu.gen.dna,  by = 'row.names')
colnames(data.gen.dna)
data.gen.dna <-  data.gen.dna %>% pivot_longer (cols = Bacillus:Lysobacter,
                                                  names_to = "Genus", 
                                                  values_to = "Abundance") %>% 
                                    filter(Abundance > 0)

data.gen.dna$pre.crop <- fct_relevel(data.gen.dna$pre.crop, "bo", "ry", "ir", "er")
data.gen.dna$cc <- fct_relevel(data.gen.dna$cc, "FW", "OSR_T", "OSR_A", "OSR_R","PHA", "VE", "BO","BO.OSR_R", "BO.OSR_T", "PHA.OSR_T", "VE.OSR_T")

#rna
ant.gen.rna <- subset_taxa(ant.bact.rna.gen_comp, Family %in% c("Bacillaceae", "Rhizobiaceae", "Comamonadaceae", "Pseudomonadaceae", "Xanthomonadaceae"))
ant.gen.rna <- microbiome::aggregate_taxa(ant.gen.rna, "Genus")
samdf.gen.rna <-as.data.frame(sample_data (ant.gen.rna))
otu.gen.rna <- as.data.frame (t(otu_table(ant.gen.rna)))
tax.gen.rna <- as.data.frame(tax_table(ant.gen.rna))

data.gen.rna <- merge (samdf.gen.rna, otu.gen.rna,  by = 'row.names')
colnames(data.gen.rna)
data.gen.rna <-  data.gen.rna %>% pivot_longer (cols = Bacillus:Lysobacter,
                                                  names_to = "Genus", 
                                                  values_to = "Abundance") %>% 
                                   filter(Abundance > 0)

data.gen.rna$pre.crop <- fct_relevel(data.gen.rna$pre.crop, "bo", "ry", "ir", "er")
data.gen.rna$cc <- fct_relevel(data.gen.rna$cc, "FW", "OSR_T", "OSR_A", "OSR_R","PHA", "VE", "BO","BO.OSR_R", "BO.OSR_T", "PHA.OSR_T", "VE.OSR_T")
```

#calculate means 
```{r}
data.gen.bact.t1 <- merge.data.frame(data.gen.dna, data.gen.rna, all = TRUE)

mean.ccgen.bact.t1 <- data.gen.bact.t1 %>%
  mutate(Abundance100 = Abundance * 100) %>% 
group_by(Genus, cc, nucleic.acid) %>%
summarise_at(vars(Abundance100),             
               list(rel.abd = mean)) 
print(mean.ccgen.bact.t1,n = "all", digits = 2,zero.print = ".")

mean.cc.bact.t1 <- data.gen.bact.t1 %>%
  mutate(Abundance100 = Abundance * 100) %>% 
group_by(nucleic.acid, cc) %>%                        
summarise_at(vars(Abundance100),              
               list(rel.abd = mean)) 
print (mean.cc.bact.t1, n = "all", digits = 1) 

tot.cc.bact.t1 <- mean.ccgen.bact.t1 %>%
group_by(nucleic.acid, cc) %>%                        
summarise_at(vars(rel.abd),              
               list(rel.abd.sum = sum)) 
print (tot.cc.bact.t1, n = "all", digits = 1)


mean.gen.bact.t1 <- data.gen.bact.t1%>%
  mutate(Abundance100 = Abundance * 100) %>% 
group_by(nucleic.acid, Genus) %>%                        
summarise_at(vars(Abundance100),              
               list(rel.abd = mean)) 
print (mean.gen.bact.t1, n = "all", digits = 1)
```

#set common colours
```{r}
unique.phyla <- union(unique(data.gen.dna$Genus), unique(data.gen.rna$Genus))
length(unique.phyla)#5
nb.cols <- length(unique.phyla)
mycolors <- colorRampPalette(brewer.pal(12, "Paired"))(nb.cols)
set.seed(77)
names(mycolors) <- sample(unique.phyla)
```

Make barplots 
```{r}
#DNA
plot.comp.dna <- plot_composition(ant.gen.dna,
                             sample.sort = "cc",
                             x.label = "cc",
                             average_by = "cc") + 
  theme(legend.position = "right") + 
  scale_fill_manual("Genus",  values = mycolors, breaks = sort(unique.phyla)) + 
  scale_y_continuous(limits = c(0, 0.07), labels = scales::percent)+
  theme_classic() + 
  theme(axis.text.x = element_text(angle = 90, size = 8,hjust = 1),
        axis.title.x = element_blank())+ 
  #ggtitle("Relative abundance of bacterial antagonists at RNA") + theme(legend.title = element_text(size = 18))+
  labs(y = "Relative abundance")
plot.comp.dna

#RNA
plot.comp.rna <- plot_composition(ant.gen.rna,
                             sample.sort = "cc",
                             x.label = "cc",
                             average_by = "cc") + 
  theme(legend.position = "right") + 
  scale_fill_manual("Genus",  values = mycolors, breaks = sort(unique.phyla)) + 
  scale_y_continuous(limits = c(0, 0.07), labels = scales::percent)+
  theme_classic() + 
  theme(axis.text.x = element_text(angle = 90, size = 8, hjust = 1),
        axis.title.x = element_blank())+ 
  #ggtitle("Relative abundance of bacterial antagonists at RNA") + theme(legend.title = element_text(size = 18))+
  labs(y = "Relative abundance")
plot.comp.rna
```

Combine plots DNA and RNA
```{r}
library(cowplot)
legend <- get_legend(
  # create some space to the left of the legend
 plot.comp.rna + theme(legend.box.margin = margin(0,0,0,10)))

alpha.ant.gen <- cowplot::plot_grid(
   plot.comp.rna + theme(legend.position="none"), 
  plot.comp.dna+ theme(legend.position="none"), 
  nrow = 2, ncol = 1, scale = 0.9,
  labels = c("A", "B")) 
alpha.ant.gen

alpha.ant.gen.leg <-plot_grid (alpha.ant.gen, legend, rel_widths = c(2,0.5))
alpha.ant.gen.leg

#ggsave(file="./Antagonists/figures/t0-relabd.antagonists.svg", plot=alpha.ant.gen.shannon.leg, 
#       width=10, height=150, units = "mm", device = "svg", scale=1.5)
```
